// Code generated by goctl. DO NOT EDIT.
// Source: scanner.proto

package scannerclient

import (
	"context"

	"yet-another-media-server/scanner/scanner"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ScanLibraryRequest  = scanner.ScanLibraryRequest
	ScanLibraryResponse = scanner.ScanLibraryResponse

	Scanner interface {
		ScanLibrary(ctx context.Context, in *ScanLibraryRequest, opts ...grpc.CallOption) (*ScanLibraryResponse, error)
	}

	defaultScanner struct {
		cli zrpc.Client
	}
)

func NewScanner(cli zrpc.Client) Scanner {
	return &defaultScanner{
		cli: cli,
	}
}

func (m *defaultScanner) ScanLibrary(ctx context.Context, in *ScanLibraryRequest, opts ...grpc.CallOption) (*ScanLibraryResponse, error) {
	client := scanner.NewScannerClient(m.cli.Conn())
	return client.ScanLibrary(ctx, in, opts...)
}

// Code generated by goctl. DO NOT EDIT.
// Source: media_library.proto

package medialibraryclient

import (
	"context"

	"yet-another-media-server/media_library/media_library"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateFileRequest                   = media_library.CreateFileRequest
	CreateLibraryRequest                = media_library.CreateLibraryRequest
	CreateMediaMetadataRelationRequest  = media_library.CreateMediaMetadataRelationRequest
	CreateMediaMetadataRelationResponse = media_library.CreateMediaMetadataRelationResponse
	CreateMediaRequest                  = media_library.CreateMediaRequest
	CreateMetadataRequest               = media_library.CreateMetadataRequest
	DeleteMetadataRequest               = media_library.DeleteMetadataRequest
	DeleteMetadataResponse              = media_library.DeleteMetadataResponse
	File                                = media_library.File
	Filter                              = media_library.Filter
	GetLibraryRequest                   = media_library.GetLibraryRequest
	GetLibraryResponse                  = media_library.GetLibraryResponse
	GetMediaByFilePathRequest           = media_library.GetMediaByFilePathRequest
	GetMediaByFilePathResponse          = media_library.GetMediaByFilePathResponse
	GetMediaRequest                     = media_library.GetMediaRequest
	GetMetadataByValueRequest           = media_library.GetMetadataByValueRequest
	GetMetadataByValueResponse          = media_library.GetMetadataByValueResponse
	Library                             = media_library.Library
	Media                               = media_library.Media
	Metadata                            = media_library.Metadata
	PaginateMediaByMetadataRequest      = media_library.PaginateMediaByMetadataRequest
	PaginateMediaByMetadataResponse     = media_library.PaginateMediaByMetadataResponse
	PaginateMetadataRequest             = media_library.PaginateMetadataRequest
	PaginateMetadataResponse            = media_library.PaginateMetadataResponse
	PaginationOptions                   = media_library.PaginationOptions
	PaginationResult                    = media_library.PaginationResult

	MediaLibrary interface {
		CreateLibrary(ctx context.Context, in *CreateLibraryRequest, opts ...grpc.CallOption) (*Library, error)
		GetLibrary(ctx context.Context, in *GetLibraryRequest, opts ...grpc.CallOption) (*GetLibraryResponse, error)
		CreateMedia(ctx context.Context, in *CreateMediaRequest, opts ...grpc.CallOption) (*Media, error)
		PaginateMediaByMetadata(ctx context.Context, in *PaginateMediaByMetadataRequest, opts ...grpc.CallOption) (*PaginateMediaByMetadataResponse, error)
		GetMedia(ctx context.Context, in *GetMediaRequest, opts ...grpc.CallOption) (*Media, error)
		GetMediaByFilePath(ctx context.Context, in *GetMediaByFilePathRequest, opts ...grpc.CallOption) (*GetMediaByFilePathResponse, error)
		CreateMetadata(ctx context.Context, in *CreateMetadataRequest, opts ...grpc.CallOption) (*Metadata, error)
		PaginateMetadata(ctx context.Context, in *PaginateMetadataRequest, opts ...grpc.CallOption) (*PaginateMetadataResponse, error)
		GetMetadataByValue(ctx context.Context, in *GetMetadataByValueRequest, opts ...grpc.CallOption) (*GetMetadataByValueResponse, error)
		CreateMediaMetadataRelation(ctx context.Context, in *CreateMediaMetadataRelationRequest, opts ...grpc.CallOption) (*CreateMediaMetadataRelationResponse, error)
		DeleteMetadata(ctx context.Context, in *DeleteMetadataRequest, opts ...grpc.CallOption) (*DeleteMetadataResponse, error)
		CreateFile(ctx context.Context, in *CreateFileRequest, opts ...grpc.CallOption) (*File, error)
	}

	defaultMediaLibrary struct {
		cli zrpc.Client
	}
)

func NewMediaLibrary(cli zrpc.Client) MediaLibrary {
	return &defaultMediaLibrary{
		cli: cli,
	}
}

func (m *defaultMediaLibrary) CreateLibrary(ctx context.Context, in *CreateLibraryRequest, opts ...grpc.CallOption) (*Library, error) {
	client := media_library.NewMediaLibraryClient(m.cli.Conn())
	return client.CreateLibrary(ctx, in, opts...)
}

func (m *defaultMediaLibrary) GetLibrary(ctx context.Context, in *GetLibraryRequest, opts ...grpc.CallOption) (*GetLibraryResponse, error) {
	client := media_library.NewMediaLibraryClient(m.cli.Conn())
	return client.GetLibrary(ctx, in, opts...)
}

func (m *defaultMediaLibrary) CreateMedia(ctx context.Context, in *CreateMediaRequest, opts ...grpc.CallOption) (*Media, error) {
	client := media_library.NewMediaLibraryClient(m.cli.Conn())
	return client.CreateMedia(ctx, in, opts...)
}

func (m *defaultMediaLibrary) PaginateMediaByMetadata(ctx context.Context, in *PaginateMediaByMetadataRequest, opts ...grpc.CallOption) (*PaginateMediaByMetadataResponse, error) {
	client := media_library.NewMediaLibraryClient(m.cli.Conn())
	return client.PaginateMediaByMetadata(ctx, in, opts...)
}

func (m *defaultMediaLibrary) GetMedia(ctx context.Context, in *GetMediaRequest, opts ...grpc.CallOption) (*Media, error) {
	client := media_library.NewMediaLibraryClient(m.cli.Conn())
	return client.GetMedia(ctx, in, opts...)
}

func (m *defaultMediaLibrary) GetMediaByFilePath(ctx context.Context, in *GetMediaByFilePathRequest, opts ...grpc.CallOption) (*GetMediaByFilePathResponse, error) {
	client := media_library.NewMediaLibraryClient(m.cli.Conn())
	return client.GetMediaByFilePath(ctx, in, opts...)
}

func (m *defaultMediaLibrary) CreateMetadata(ctx context.Context, in *CreateMetadataRequest, opts ...grpc.CallOption) (*Metadata, error) {
	client := media_library.NewMediaLibraryClient(m.cli.Conn())
	return client.CreateMetadata(ctx, in, opts...)
}

func (m *defaultMediaLibrary) PaginateMetadata(ctx context.Context, in *PaginateMetadataRequest, opts ...grpc.CallOption) (*PaginateMetadataResponse, error) {
	client := media_library.NewMediaLibraryClient(m.cli.Conn())
	return client.PaginateMetadata(ctx, in, opts...)
}

func (m *defaultMediaLibrary) GetMetadataByValue(ctx context.Context, in *GetMetadataByValueRequest, opts ...grpc.CallOption) (*GetMetadataByValueResponse, error) {
	client := media_library.NewMediaLibraryClient(m.cli.Conn())
	return client.GetMetadataByValue(ctx, in, opts...)
}

func (m *defaultMediaLibrary) CreateMediaMetadataRelation(ctx context.Context, in *CreateMediaMetadataRelationRequest, opts ...grpc.CallOption) (*CreateMediaMetadataRelationResponse, error) {
	client := media_library.NewMediaLibraryClient(m.cli.Conn())
	return client.CreateMediaMetadataRelation(ctx, in, opts...)
}

func (m *defaultMediaLibrary) DeleteMetadata(ctx context.Context, in *DeleteMetadataRequest, opts ...grpc.CallOption) (*DeleteMetadataResponse, error) {
	client := media_library.NewMediaLibraryClient(m.cli.Conn())
	return client.DeleteMetadata(ctx, in, opts...)
}

func (m *defaultMediaLibrary) CreateFile(ctx context.Context, in *CreateFileRequest, opts ...grpc.CallOption) (*File, error) {
	client := media_library.NewMediaLibraryClient(m.cli.Conn())
	return client.CreateFile(ctx, in, opts...)
}
